grammar ActivityDiagram extends de.monticore.java.JavaDSL {

  symbol scope ActivityDiagram =
    "activity" "diagram" Name "{"
    ( Variable )*
    "activity" "Start" ";"
    "activity" "End" ";"
    ( Element | Edge )*
    "}"
  ;

  interface Element = Name;

  symbol scope Activity implements Element =
    "activity" Name ( "{" Action "}" | ";" )
  ;

  symbol Junction implements Element =
    ( ["fork"]
    | ["join"]
    | ["decision"]
    | ["merge"] )
    "node" Name ";"
  ;

  Edge =
    ( ["Start"] | from:Name )
    ( "[" Expression "]" )?
    "->"
    ( ["End"] | to:Name )
    ";"
  ;

  Action =
    (Name "=")? (Parameter | method:QualifiedName "(" Parameters? ")")
    //(Name "=")? = VariableInititializerOrExpression
  ;

  Parameters =
    Parameter ("," Parameter)*
  ;

  Parameter =
    Name | StringLiteral | IntLiteral | BooleanLiteral
  ;
  
  symbol Variable = 
    "var" Type Name ";"
  ;
}