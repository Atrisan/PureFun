grammar PureFun extends de.monticore.literals.Literals, de.monticore.expressions.CommonExpressions {

Module =
"module" Name "{"
    Definition*
"}";

interface Definition;

interface Statement;

Variable implements Definition; //TODO

Function implements Definition; //TODO

DataStructure implements Definition
 = Generic?
    "data" Name "{"
    Variable*
    "}";

IfStatement implements Statement
    =   "if" "(" condition:Expression ")" thenStatement:BlockStatement ("else" elseStatement:( BlockStatement | IfStatement ) )?
;

ForStatement implements Statement; //TODO

WhileStatement implements Statement; //TODO

AsyncStatement implements Statement; //TODO

BlockStatement implements Statement
 = "{" Statement* "}";

Generic; //TODO


/*=================================================================*/

  BooleanAndOpExpressionDiff implements Expression <120>, InfixExpression =
	left:Expression operator:"and" right:Expression;

  BooleanOrOpExpressionDiff implements Expression <117>, InfixExpression =
	left:Expression operator:"or" right:Expression;

/*=================================================================*/
}